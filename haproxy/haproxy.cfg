global
  # Send logs to 'rsyslog' using syslog protocol
  log rsyslog syslog

  # Limit the max number of concurrent connections
  maxconn 20480

  # Do not use chroot unless you modify Lua script pathing
  # chroot restricts the file system view for security
  # If set, you need to adjust Lua script paths accordingly
  # chroot /jail

  # Load a Lua script to handle ACME HTTP-01 challenges
  lua-load /etc/haproxy/acme-http01-webroot.lua

  # SSL cipher suite preference for HTTPS
  ssl-default-bind-ciphers AES256+EECDH:AES256+EDH:!aNULL;

  # Set the size of the Diffie-Hellman parameter used for DHE key exchanges
  tune.ssl.default-dh-param 4096

  # Force shutdown after 3 seconds during reload to avoid hanging (esp. with WebSockets)
  hard-stop-after 3s

# Define a DNS resolver for Docker
resolvers docker
  # Point to Dockerâ€™s internal DNS for container resolution
  nameserver dns "127.0.0.11:53"

defaults
  # Apply global logging
  log global

  # Default mode for connections is HTTP
  mode http

  # Time to wait for a connection attempt to a server to succeed
  timeout connect 5000ms

  # Timeout for client inactivity
  timeout client 50000ms

  # Timeout for server inactivity
  timeout server 50000ms

  # Add X-Forwarded-For header with client IP
  option forwardfor

  # Log HTTP requests using a standard format
  option httplog

  # Fallback strategies if DNS resolution fails
  default-server init-addr last,libc,none

frontend http
  # Bind to port 80 (plain HTTP)
  bind *:80
  mode http

  # Match ACME challenge path
  acl url_acme_http01 path_beg /.well-known/acme-challenge/

  # Serve the ACME challenge if GET method matches the ACL
  http-request use-service lua.acme-http01 if METH_GET url_acme_http01

  # Redirect all other traffic to HTTPS (if not already using SSL)
  redirect scheme https code 301 if !{ ssl_fc }

frontend https
  # Bind to port 443 with SSL; specify certificate location and disable old/insecure protocols
  bind *:443 ssl crt /etc/haproxy/certs/ no-sslv3 no-tls-tickets no-tlsv10 no-tlsv11

  # Enable gzip compression for specified MIME types
  compression algo gzip
  compression type text/css text/html text/javascript application/javascript text/plain text/xml application/json image/svg+xml

  # Add security headers to responses
  http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"
  http-response set-header Cache-Control no-cache,\ max-age=31536000
  http-response set-header Expires %[date(3600),http_date]

  # Conditionally set charset for HTML content types
  acl is_content_type_html res.hdr(Content-Type) -i text/html
  http-response set-header Content-Type text/html,\ charset=UTF-8 if is_content_type_html

  # Add HTTPS info to forwarded requests
  http-request add-header X-Forwarded-Proto https if { ssl_fc }

  # Route requests to backends based on path using a key/value map
  use_backend %[base,lower,map_beg(/etc/haproxy/sites.map,default_backend)]

backend www
  # Define backend pointing to container named 'www' on port 80
  # Use Docker DNS resolver; prefer IPv4 resolution
  server www www:80 check resolvers docker resolve-prefer ipv4
